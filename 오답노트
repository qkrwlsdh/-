# 2022년04월24일 기출
1.	UML 다이어그램 중 순차 다이어그램에 대한 설명으로 틀린 것은?
     1.	객체 간의 동적 상호작용을 시간 개념을 중심으로 모델링 하는 것이다.
     2.	주로 시스템의 정적 측면을 모델링하기 위해 사용한다.
     3.	일반적으로 다이어그램의 수직 방향이 시간의 흐름을 나타낸다.
     4.	회귀 메시지(Self-Message), 제어블록(Statement block) 등으로 구성된다.

     입력한 답 : 4
     정답 : [2] 
     정답률 : 75%
<문제 해설>
순차 다이어그램은 행위 다이어그램이므로 동적이고, 순차적인 표현을 위한 다이어그램이다


3.	익스트림 프로그래밍에 대한 설명으로 틀린 것은?     
     1.	대표적인 구조적 방법론 중 하나이다.
     2.	소규모 개발 조직이 불확실하고 변경이 많은 요구를 접하였을 때 적절한 방법이다.
     3.	익스트림 프로그래밍을 구동시키는 원리는 상식적인 원리와 경험을 최대한 끌어 올리는 것이다.
     4.	구체적인 실천 방법을 정의하고 있으며, 개발 문서 보다는 소스코드에 중점을 둔다.

     입력한 답 : 3
     정답 : [1] 
     정답률 : 60%
<문제 해설>
구조적 방법론이 아니라 애자일 방법론 중 하나이다.
구조적 방법론은 계획 중심의 접근 방식을 따르는 반면, 익스트림 프로그래밍은 반복적이고 점진적인 개발을 강조하여 변화에 유연하게 대응할 수 있도록 설계된 방법론으로 차이가 있다.


5.	요구사항 분석에서 비기능적(Nonfunctional) 요구에 대한 설명으로 옳은 것은?
     1.	시스템의 처리량(Throughput), 반응 시간 등의 성능 요구나 품질 요구는 비기능적 요구에 해당하지 않는다.
     2.	'차량 대여 시스템이 제공하는 모든 화면이 3초 이내에 사용자에게 보여야 한다'는 비기능적 요구이다.
     3.	시스템 구축과 관련된 안전, 보안에 대한 요구사항들은 비기능적 요구에 해당하지 않는다.
     4.	'금융 시스템은 조회, 인출, 입금, 송금의 기능이 있어야 한다'는 비기능적 요구이다.

     입력한 답 : 3
     정답 : [2] 
     정답률 : 69%
<문제 해설>
기능적 요구사항 Vs 비기능적 요구사항
- 기능적 요구사항 : 시스템이 실제로 어떻게 동작하는지에 관점을 둔 요구사항
- 비기능적 요구사항 : 시스템 구축에 대한 성능, 보안, 품질, 안정 등에 대한 성능, 보안, 품질, 안정성등으로 실제 수행에 보조적인 요구사항


11.	객체에 대한 설명으로 틀린 것은?
     1.	객체는 상태, 동작, 고유 식별자를 가진 모든 것이라 할 수 있다.
     2.	객체는 공통 속성을 공유하는 클래스들의 집합이다.
     3.	객체는 필요한 자료 구조와 이에 수행되는 함수들을 가진 하나의 독립된 존재이다.
     4.	객체의 상태는 속성값에 의해 정의된다.

     입력한 답 : 4
     정답 : [2] 
     정답률 : 73%
<문제 해설>
클래스는 공통 속성을 공유하는 객체들의 집합이다.

프로그래밍을 해보면 객체를 생성할 때는 클래스를 정의한 후에 클래스 이름으로 객체를 생성한다.
쉽게 설명하면 클래스는 빵을 굽는 틀이다. 그리고 객체는 그 틀에서 구워지는 각각의 빵이라고 생각하면 된다.


12.	속성과 관련된 연산(Operation)을 클래스 안에 묶어서 하나로 취급하는 것을 의미하는 객체지향 개념은?
     1.	Inheritance
     2.	Class
     3.	Encapsulation
     4.	Association

     입력한 답 : 1
     정답 : [3] 
     정답률 : 63%
<문제 해설>
클래스: 하나 이상의 유사한 객체들을 묶는다.
캡슐화: 서로 관련성이 많은 데이터들과 연산들을 묶는다.

상속(Inheritance) : 이미 정의된 상위 클래스(부모 클래스)의 모든 속성과 연산을 하위 클래스(자식 클래스)가 물려받는 것
클래스: 하나 이상의 유사한 객체들을 묶는다.
캡슐화(Encapsulation): 서로 관련성이 많은 데이터들과 연산들을 묶는다.
연관관계 (Association) : 2개 이상의 사물이 서로 관련되어 있음을 표현한다

Encapsulation -> 인캡슐 -> 캡슐 안에 넣다 -> 클래스 안에 속성과 연산들을 묶어서 넣는다.



20.	소프트웨어 아키텍처 모델 중 MVC(Model-View-Controller)와 관련한 설명으로 틀린 것은?
     1.	MVC 모델은 사용자 인터페이스를 담당하는 계층의 응집도를 높일 수 있고, 여러 개의 다른 UI를 만들어 그 사이에 결합도를 낮출 수 있다.
     2.	모델(Model)은 뷰(View)와 제어(Controller) 사이에서 전달자 역할을 하며, 뷰마다 모델 서브시스템이 각각 하나씩 연결된다.
     3.	뷰(View)는 모델(Model)에 있는 데이터를 사용자 인터페이스에 보이는 역할을 담당한다.
     4.	제어(Controller)는 모델(Model)에 명령을 보냄으로써 모델의 상태를 변경할 수 있다.

     입력한 답 : 1
     정답 : [2] 
     정답률 : 69%
<문제 해설>
한 개의 모델에 대해 여러 개의 뷰를 만들 수 있음

모델은 서브 시스템의 핵심 기능과 데이터를 보관하며 MVC 패턴에서는 여러 개의 뷰를 만들 수 있으므로 한 개의 모델에 대해 여러 개의 뷰를 필요로 하는 대화형 어플리케이션에 적합하다.

전달자 역할은 모델(Model)이 아닌 제어(Controller)이다.

제어(controller)는 뷰(view)와 모델(model)사이에서 전달자 역할을 수행한다.
